#include "proyecto.h"
#define NRO_HILOS 4
#define TAM_CAD 200

typedef struct {
	HANDLE h;
	DWORD id;

	int nroHilo;
	int totalHilos;
	char tituloVentana[TAM_CAD];
	char nombreArchivo[TAM_CAD];
} di_reproduce_t, *pdi_reproduce_t;

DWORD WINAPI Reproduce(LPVOID par);
pdi_reproduce_t infoThread[NRO_HILOS];

int main(int argc, char *argv[])
{

	CheckError(argc != 2, "Debe haber al menos 2 argumentos (alto y ancho de la imagen)", 1);
	setlocale(LC_ALL, "Spanish");
	
	//lanzar los hilos de reproduccion
	for (size_t i = 0; i < NRO_HILOS; i++)
	{
		pdi_reproduce_t p = new di_reproduce_t;
		p->nroHilo = i;
		p->totalHilos = NRO_HILOS;
		snprintf(p->tituloVentana, sizeof(p->tituloVentana), "Venana %d", i);
		strncpy(p->nombreArchivo, "P01Eje1.mp4", sizeof(p->nombreArchivo));
		p->h = CreateThread(NULL, 0, Reproduce, p, 0, &p->id);
		CheckError(NULL == p->h, "ERROR al crear el hilo", 1);
		// guardar el valor de p?
		infoThread[i] = p;
	}
	printf("\nPulsa una tecla para terminar\n");
	_getch();

	return 0;
}

DWORD WINAPI Reproduce(LPVOID par)
{
	pdi_reproduce_t pdi = (pdi_reproduce_t)par;

	int tecla;
	IplImage* imgOriginal;

	CvCapture* g_capture = cvCreateFileCapture(pdi-> nombreArchivo);
	CheckError(NULL == g_capture, "ERROR: No se pudo abrir el archivo de video\n\n", 1);
	imgOriginal = cvQueryFrame(g_capture);
	CheckError(NULL == imgOriginal, "ERROR: No se pudo leer el primer frame\n\n", 2);

	double retrasoAcumulado = 0.0;
	int nroImagenes = 0;

	do
	{
		char mensaje[200];
		imgOriginal = cvQueryFrame(g_capture);
		if (imgOriginal == NULL) break;
		double ahora = cvGetCaptureProperty(g_capture, CV_CAP_PROP_POS_MSEC) / 1000;
		if (retrasoAcumulado < ahora) Sleep((DWORD)((ahora - retrasoAcumulado) * 1000));
		retrasoAcumulado = ahora;
		nroImagenes++;
		snprintf(mensaje, sizeof(mensaje),
			"jorcallag %.2f segs\nPulsa ENTER para terminar",
			ahora);
		ImagenAVentana(imgOriginal, pdi-> tituloVentana, mensaje, true, &tecla);
	} while (tecla != '\r');

	return 0;
}
