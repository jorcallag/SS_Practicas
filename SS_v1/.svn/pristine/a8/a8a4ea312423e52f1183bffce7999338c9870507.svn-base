#include "proyecto.h"
// poner aquí todos los archivos de includes adicionales necesarios

int main(int argc, char *argv[])
{
	int tecla;	// permite leer las teclas que pulsa el usuario en las ventanas openCV
	setlocale(LC_ALL, "Spanish"); // Previo

	// comprueba que el usuario ha puesto el ancho y alto de la imagen en línea de comandos
	CheckError(argc != 2, "Debe haber al menos 1 argumentos (nombre del fichero de la imagen)", 1);

	IplImage* imgOriginal;

	CvCapture* g_capture;
	g_capture = cvCreateFileCapture(argv[1]); //Abre el archivo de video
	CheckError (NULL == g_capture, "\n\nERROR: No se puede abrir el archivo de video\n\n", 1);
	imgOriginal = cvQueryFrame(g_capture); 
	if (NULL == imgOriginal)
		return 0;
	IplImage * imgResultado = cvCreateImage(CvSize(imgOriginal->width, imgOriginal->height),
		imgOriginal->nChannels, imgOriginal->depth);

	double retrasoAcumulado = 0.0; // permite calcular la velocidad de proceso de las imágenes
	int nroImagenes = 0;
	do
	{
		char mensaje[200];
		MideRetraso(0);	//<-- Solo medimos el tiempo de proceso de la imagen. Desde aquí
		//ProcesaImagen(imgOriginal, imgResultado);
		TrasMalla(imgOriginal, imgResultado, 0.0, 0.0);
		//Sleep(100);
		retrasoAcumulado += MideRetraso(0);	// --> hasta aquí
		nroImagenes++;
		// Construimos el mensaje
		snprintf(mensaje, sizeof(mensaje),
			"procesando %s imagenes en %.2f segs\n(%.2f imgs/s)\nPulsa ENTER para terminar",
			nroImagenes, retrasoAcumulado, nroImagenes / retrasoAcumulado);
		//AGris(imgOriginal, imgResultado);
		// Muestra el resultado
		ImagenAVentana(imgResultado, "RESULTADO:", mensaje, true, &tecla);
		imgOriginal = cvQueryFrame(g_capture);
	} while (tecla != '\n' && NULL!=imgOriginal);	// salimos cuando el usuario pulsa la tecla Retorno
	cvReleaseCapture(&g_capture);
	return 0;
}
